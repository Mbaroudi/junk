#!/bin/bash

HOST_CONF_DIR="/etc/hosting"
HOST_LOG_DIR="/var/log/apache"

case $1 in
########################################################
	### start the specified host.......
	start)	
		if [[ $2 == "" ]]; then
			echo "* You must specify an ip address or 'all'"
			exit 0
		fi

		if [[ $2 == "all" ]]; then
			echo "Starting all hosts..."
			for i in $HOST_CONF_DIR; do
				if [[ $i == 172.16.0.* ]]; then
					/usr/sbin/apache -D SSL -D PHP4 -D GZIP -f $HOST_CONF_DIR/$i/httpd.conf && \
					echo "Host $i started" && continue
                			echo "* Couldn't start host $i"
				fi
			done
			exit 0
		fi

		if [[ ! -d $HOST_CONF_DIR/$2 && $2 == 172.16.0.* ]]; then
			echo "* Such host does not exist. Please check the ip address"
			exit 1
		fi

		if [[ -f $HOST_CONF_DIR/$2/apache.pid ]]; then
			echo "* This server has been already started"
			exit 1
		fi

		/usr/sbin/apache -D SSL -D PHP4 -D GZIP -f $HOST_CONF_DIR/$2/httpd.conf && echo "Host $2 started" && exit 0
		echo "* Couldn't start apache on ip $2"
		exit 1
		;;
########################################################
	### stop the specified host.......
	stop) 	
		if [[ $2 == "" ]]; then
                        echo "* You must specify an ip address or 'all'"
                        exit 0
                fi

                if [[ $2 == "all" ]]; then
                        echo "Stopping all hosts..."
                        for i in $HOST_CONF_DIR; do
                                if [[ $i == 172.16.0.* ]]; then
					PID=`cat $HOST_CONF_DIR/$i/apache.pid`
			                kill -STOP $PID && rm $HOST_CONF_DIR/$i/apache.pid && \
					echo "Host $i stopped" && continue
                                        echo "* Couldn't stop host $i"
                                fi
                        done
                        exit 0
                fi

                if [[ ! -d $HOST_CONF_DIR/$2 ]]; then
                        echo "* Such host does not exist. Please check the ip address"
                        exit 2
                fi

                if [[ ! -f $HOST_CONF_DIR/$2/apache.pid ]]; then
			echo $2
                        echo "* This server has not been started yet"
                        exit 2
                fi

		PID=`cat $HOST_CONF_DIR/$2/apache.pid`
		kill $PID && rm $HOST_CONF_DIR/$2/apache.pid && echo "Host $2 stopped" && exit 0
		echo "* Couldn't stop apache on ip $2"
		exit 2
		;;

########################################################
	### restart the specified host.......
	restart)
		$0 stop $2
		$0 start $2
		;;

########################################################
	add)
		if [[ $4 == "" ]]; then
			echo "You must specify user name, group name and host name"
			exit 3
		fi
		USER=$2
		GROUP=$3
		HOST=$4

		IP=172.16.0.0
		list=`ls -1 $HOST_CONF_DIR`
		for i in $list; do
			if [[ -d $HOST_CONF_DIR/$i && $i == 172.16.0.* && $i > $IP ]]; then
				IP="$i"
			fi
		done
		count=`echo $IP | awk --field-separator '.' '{print $4}'`
		count=$((count+1))
		IP=172.16.0.$count
		if [[ `cat $HOST_CONF_DIR/hosts | grep $IP | grep -v "^#"` != "" ]]; then
			echo "You must check your hosts file: it contains unused address $IP"
			cat $HOST_CONF_DIR/hosts | grep $IP
			exit 3
		fi

		echo "Adding host $IP named $HOST. It belongs to $USER:$GROUP"
		mkdir $HOST_LOG_DIR/$IP && chown $USER:$GROUP $HOST_LOG_DIR/$IP
		cp -R $HOST_CONF_DIR/default $HOST_CONF_DIR/$IP && chown -R $USER:$GROUP $HOST_CONF_DIR/$IP
		sed 's/$IP/'$IP'/' $HOST_CONF_DIR/default/httpd.conf | sed -e 's/$HOST/'$HOST'/' | \
			sed -e 's/$USER/'$USER'/' | sed -e 's/$GROUP/'$GROUP'/' > $HOST_CONF_DIR/$IP/httpd.conf
		sed 's/$IP/'$IP'/' $HOST_CONF_DIR/default/host.conf | sed -e 's/$HOST/'$HOST'/' | \
			sed -e 's/$USER/'$USER'/' | sed -e 's/$GROUP/'$GROUP'/' > $HOST_CONF_DIR/$IP/host.conf
		echo "$IP	host$count.webber.rubin.ru	$HOST" >> $HOST_CONF_DIR/hosts
		/usr/sbin/squid -k reconfigure
		echo "Host added successfully"
		;;
########################################################
	### show info on specified host
	remove)
		if [[ $2 == "" ]]; then
                        echo "* You must specify an ip address of the host"
                        exit 4
                fi

		if [[ ! -d $HOST_CONF_DIR/$2 ]]; then
                        echo "* Such host does not exist. Please check the ip address"
                        exit 4
                fi

		echo "Removing host $2"
		$0 stop $2 2>&1>/dev/null 
		rm -rf $HOST_CONF_DIR/$2 
		rm -rf $HOST_LOG_DIR/$2
		cat $HOST_CONF_DIR/hosts | grep -v $2 > $HOST_CONF_DIR/hosts
		exit 0
		;;
########################################################
	### show info on specified host
	show)
		if [[ $2 == "" ]]; then
                        echo "* You must specify an ip address or 'all'"
                        exit 5
                fi

                if [[ $2 == "all" ]]; then
                        echo "Showing info on all hosts..."
			list=`ls -1 $HOST_CONF_DIR`
                        for i in $list; do
                                if [[ $i == *172.16.0.* ]]; then
					echo "-== Info on host $i ==-"
					if [[ -d $HOST_CONF_DIR/$i && -f $HOST_CONF_DIR/$i/apache.pid ]]; then
						echo "Host is running"
					else
						echo "Host is down"
					fi
					echo "Admin host name: "
					echo "  `cat $HOST_CONF_DIR/hosts | grep $i | grep -v "^#" | awk '{print $2}'`"
					echo "DNS host names:"
					for name in `cat $HOST_CONF_DIR/hosts | grep $i | grep -v "^#"`; do
						if [[ $name != 172.16.0.* && $name != host*.webber.rubin.ru ]]; then
							echo "  $name"
						fi
					done
					echo "Owner user: `cat $HOST_CONF_DIR/$i/httpd.conf|grep "User "|awk '{print $2}'`"
					echo "Owner group: `cat $HOST_CONF_DIR/$i/httpd.conf|grep "Group"|awk '{print $2}'`"
					echo
				fi
                        done
                        exit 0
                fi

                if [[ ! -d $HOST_CONF_DIR/$2 ]]; then
                        echo "* Such host does not exist. Please check the ip address"
                        exit 5
                fi
		
		echo "-==Info on host $2==-"
		if [[ -d $HOST_CONF_DIR/$i && -f $HOST_CONF_DIR/$2/apache.pid ]]; then 
			echo "Host is running"
		else
			echo "Host is down"
		fi
		echo "Admin host name:"
		echo "   `cat $HOST_CONF_DIR/hosts | grep $2 | grep -v "^#" | awk '{print $2}'`"
		echo "DNS host names:"
		for name in `cat $HOST_CONF_DIR/hosts | grep $2 | grep -v "^#"`; do
			if [[ $name != 172.16.0.* && $name != host*.webber.rubin.ru ]]; then
				echo "  $name"
			fi
		done
		echo "Owner user: `cat $HOST_CONF_DIR/$2/httpd.conf | grep "User " | awk '{print $2}'`"
		echo "Owner group: `cat $HOST_CONF_DIR/$2/httpd.conf | grep "Group " | awk '{print $2}'`"
		exit 0
		;;

########################################################
	### show help screen...........
	*)	echo "===Hosting script usage==="
                echo "Start the host: 	hosting start <ip_address | all>"
                echo "Stop the host:  	hosting stop <ip_address | all>"
                echo "Restart the host: hosting restart <ip_address | all>"
                echo "Add new host:	hosting add -user <username> -group <groupname>"
                echo "Show host info:	hosting show <ip_address | all>"
		exit 0
		;;
esac

