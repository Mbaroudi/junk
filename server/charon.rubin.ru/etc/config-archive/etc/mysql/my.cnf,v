head	1.2;
access;
symbols;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2006.06.07.05.41.30;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.27.19.22.13;	author root;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.04.27.19.23.52;	author root;	state Exp;
branches;
next	;


desc
@Archived config file.
@


1.2
log
@dispatch-conf update.
@
text
@# Example MySQL config file for very large systems.
#
# This is for a large system with memory of 1G-2G where the system runs mainly
# MySQL.
#
# You can copy this file to
# /etc/my.cnf to set global options,
# mysql-data-dir/my.cnf to set server-specific options (in this
# installation this directory is /var/lib/mysql) or
# ~/.my.cnf to set user-specific options.
#
# In this file, you can use all long options that a program supports.
# If you want to know which options a program supports, run the program
# with the "--help" option.

# The following options will be passed to all MySQL clients
[client]
#password	= your_password
port		= 3306
socket		= /var/run/mysqld/mysqld.sock
default-character-set = cp1251
character-sets-dir = /usr/share/mysql/charsets

# Here follows entries for some specific programs

# The MySQL server
[mysqld]
user				= mysql
port				= 3306
socket				= /var/run/mysqld/mysqld.sock
pid-file   			= /var/run/mysqld/mysqld.pid
log-error       		= /var/log/mysql/mysqld.err
basedir                         = /usr
datadir                         = /var/lib/mysql
language                        = /usr/share/mysql/english
default-character-set 		= cp1251
character-set-server            = cp1251
character-sets-dir 		= /usr/share/mysql/charsets
skip-character-set-client-handshake
skip-locking
key_buffer = 384M
max_allowed_packet = 1M
table_cache = 512
sort_buffer_size = 2M
read_buffer_size = 2M
read_rnd_buffer_size = 8M
myisam_sort_buffer_size = 64M
thread_cache_size = 8
query_cache_size = 32M
# Try number of CPU's*2 for thread_concurrency
thread_concurrency = 8

# Don't listen on a TCP/IP port at all. This can be a security enhancement,
# if all processes that need to connect to mysqld run on the same host.
# All interaction with mysqld must be made via Unix sockets or named pipes.
# Note that using this option without enabling named pipes on Windows
# (via the "enable-named-pipe" option) will render mysqld useless!
# 
#skip-networking
bind-address = 127.0.0.1

# Replication Master Server (default)
# binary logging is required for replication
#log-bin=mysql-bin

# required unique id between 1 and 2^32 - 1
# defaults to 1 if master-host is not set
# but will not function as a master if omitted
server-id	= 1

# Replication Slave (comment out master section to use this)
#
# To configure this host as a replication slave, you can choose between
# two methods :
#
# 1) Use the CHANGE MASTER TO command (fully described in our manual) -
#    the syntax is:
#
#    CHANGE MASTER TO MASTER_HOST=<host>, MASTER_PORT=<port>,
#    MASTER_USER=<user>, MASTER_PASSWORD=<password> ;
#
#    where you replace <host>, <user>, <password> by quoted strings and
#    <port> by the master's port number (3306 by default).
#
#    Example:
#
#    CHANGE MASTER TO MASTER_HOST='125.564.12.1', MASTER_PORT=3306,
#    MASTER_USER='joe', MASTER_PASSWORD='secret';
#
# OR
#
# 2) Set the variables below. However, in case you choose this method, then
#    start replication for the first time (even unsuccessfully, for example
#    if you mistyped the password in master-password and the slave fails to
#    connect), the slave will create a master.info file, and any later
#    change in this file to the variables' values below will be ignored and
#    overridden by the content of the master.info file, unless you shutdown
#    the slave server, delete master.info and restart the slaver server.
#    For that reason, you may want to leave the lines below untouched
#    (commented) and instead use CHANGE MASTER TO (see above)
#
# required unique id between 2 and 2^32 - 1
# (and different from the master)
# defaults to 2 if master-host is set
# but will not function as a slave if omitted
#server-id       = 2
#
# The replication master for this slave - required
#master-host     =   <hostname>
#
# The username the slave will use for authentication when connecting
# to the master - required
#master-user     =   <username>
#
# The password the slave will authenticate with when connecting to
# the master - required
#master-password =   <password>
#
# The port the master is listening on.
# optional - defaults to 3306
#master-port     =  <port>
#
# binary logging - not required for slaves, but recommended
#log-bin=mysql-bin

# Point the following paths to different dedicated disks
tmpdir		= /tmp/		
#log-update 	= /path-to-dedicated-directory/hostname

# Uncomment the following if you are using BDB tables
#bdb_cache_size = 384M
#bdb_max_lock = 100000

# Uncomment the following if you are using InnoDB tables
innodb_data_home_dir = /var/lib/mysql/
#innodb_data_file_path = ibdata1:2000M;ibdata2:10M:autoextend
innodb_data_file_path           = ibdata1:10M:autoextend
innodb_log_group_home_dir = /var/lib/mysql/
innodb_log_arch_dir = /var/lib/mysql/
# You can set .._buffer_pool_size up to 50 - 80 %
# of RAM but beware of setting memory usage too high
innodb_buffer_pool_size = 384M
innodb_additional_mem_pool_size = 20M
# Set .._log_file_size to 25 % of buffer pool size
innodb_log_file_size = 100M
innodb_log_buffer_size = 8M
innodb_flush_log_at_trx_commit = 1
innodb_lock_wait_timeout = 100

[mysqldump]
default-character-set = cp1251
character-sets-dir = /usr/share/mysql/charsets
quick
max_allowed_packet = 16M

[mysql]
default-character-set = cp1251
character-sets-dir = /usr/share/mysql/charsets
no-auto-rehash
# Remove the next comment character if you are not familiar with SQL
#safe-updates

[isamchk]
default-character-set = cp1251
character-sets-dir = /usr/share/mysql/charsets
key_buffer = 256M
sort_buffer_size = 256M
read_buffer = 2M
write_buffer = 2M

[myisamchk]
default-character-set = cp1251
character-sets-dir = /usr/share/mysql/charsets
key_buffer = 256M
sort_buffer_size = 256M
read_buffer = 2M
write_buffer = 2M

[mysqlhotcopy]
default-character-set = cp1251
character-sets-dir = /usr/share/mysql/charsets
interactive-timeout
@


1.1
log
@dispatch-conf update.
@
text
@d1 1
a1 2
# /etc/mysql/my.cnf: The global mysql configuration file.
# $Header: /var/cvsroot/gentoo-x86/dev-db/mysql/files/my.cnf-4.0.24-r1,v 1.1 2005/03/13 05:54:00 robbat2 Exp $
d3 2
a4 4
# This file can be simultaneously placed in three places:
# 1. /etc/mysql/my.cnf to set global options.
# 2. /var/lib/mysql/my.cnf to set server-specific options.
# 3. ~/.my.cnf to set user-specific options.
d6 9
a14 4
# One can use all long options that the program supports.
# Run the program with --help to get a list of them.
#
# The following values assume you have at least 64M RAM!
d16 1
d18 1
a18 1
#password	= my_password
d21 2
d24 1
a24 2
[safe_mysqld]
err-log		= /var/log/mysql/mysql.err
d26 1
d28 12
a39 40
user		= mysql
pid-file	= /var/run/mysqld/mysqld.pid
socket		= /var/run/mysqld/mysqld.sock
log-error	= /var/log/mysql/mysqld.err
# If set, mysql logs all queries(general query log). This will be deprecated in
# 5.0. This logs all queries, even error queries and is slow.
# log          = /var/log/mysql/mysql.log
#
# If you really need logging, use rather binary logging. Especially when doing
# replication. Read
# file:/usr/share/doc/mysql-*/manual.html.gz#Replication
# You can use PURGE MASTER LOGS TO '$hostname-bin.010' to get rid of old logs
# from $hostname-bin.01 up to $hostname-bin.09 while the slave server is
# running.
# Before doing that, check which logfile slave curently uses by running
# mysql> SHOW SLAVE STATUS
# To list logfiles on master do:
# mysql> SHOW MASTER LOGS
# Then use PURGE for those not needed anymore only! Never remove the files
# manually!
#
# Also consult RESET MASTER and RESET SLAVE commands before doing any changes
# mysql> RESET MASTER - Deletes all binary logs listed in the index
#                       file, resetting the binlog index file to be empty.
# mysql> RESET SLAVE - Makes the slave forget its replication position in
#                      the master logs.
# mysql> SET SQL_LOG_BIN=0  - this turns off logging (execute on MASTER only)
# mysql> SET SQL_LOG_BIN=1  - this turns on logging (execute on MASTER only)
#
# log-bin
# set-variable  = binlog-do-db=non_existant
# set-variable  = binlog-ignore-db=database_name
#
# server-id has to unique for each master or slave in your network,
# lets use last number from IP address
# server-id      = 207
basedir		= /usr
datadir		= /var/lib/mysql
tmpdir		= /tmp
language	= /usr/share/mysql/english
d41 18
a58 7
set-variable	= key_buffer=16M
set-variable	= max_allowed_packet=1M
set-variable	= thread_stack=128K
# keep secure by default!
bind-address    = 127.0.0.1
port		= 3306
# this can make it even more secure:
d60 31
d92 43
a134 15
# The following is the InnoDB configuration
# if you wish to disable innodb instead
# uncomment just the next line
#skip-innodb
#
# the rest of the innodb config follows:
# don't eat too much memory, we're trying to be safe on 64Mb boxes.
# you might want to bump this up a bit on boxes with more RAM
set-variable = innodb_buffer_pool_size=32M
# this is the default, increase if you have lots of tables
set-variable = innodb_additional_mem_pool_size=1M
#
# i'd like to use /var/lib/mysql/innodb, but that is seen as a database :-(
# and upstream wants things to be under /var/lib/mysql/, so that's the route
# we have to take for the moment
d136 3
d140 9
a148 15
innodb_log_group_home_dir = /var/lib/mysql/
# you may wish to change this size to be more suitable for your system
# the max is there to avoid run-away growth on your machine
innodb_data_file_path = ibdata1:10M:autoextend:max:128M
# we keep this at around 25% of of innodb_buffer_pool_size
# sensible values range from 1MB to (1/innodb_log_files_in_group*innodb_buffer_pool_size)
set-variable = innodb_log_file_size=8M
# this is the default, increase if you have very large transactions.
set-variable = innodb_log_buffer_size=1M
# this is the default, and won't hurt you.
# you shouldn't need to tweak it.
set-variable = innodb_log_files_in_group=2
# see the innodb config docs, the other options are not always safe
innodb_flush_log_at_trx_commit=1

d151 2
d154 1
a154 1
set-variable	= max_allowed_packet=1M
d157 5
a161 1
#no-auto-rehash	# faster start of mysql but no tab completition
d164 19
a182 1
set-variable	= key_buffer=16M
@


1.1.1.1
log
@dispatch-conf update.
@
text
@d2 11
a12 1
# $Header: /var/cvsroot/gentoo-x86/dev-db/mysql/files/my.cnf-4.1-r1,v 1.3 2006/02/01 20:25:56 vivo Exp $
a13 1
# The following options will be passed to all MySQL clients
d15 3
a17 3
#password					= your_password
port						= 3306
socket						= /var/run/mysqld/mysqld.sock
d19 2
a20 15
[mysql]
character-sets-dir=utf8
default-character-set=utf8

[mysqladmin]
character-sets-dir=utf8
default-character-set=utf8

[mysqlcheck]
character-sets-dir=utf8
default-character-set=utf8

[mysqldump]
character-sets-dir=utf8
default-character-set=utf8
a21 19
[mysqlimport]
character-sets-dir=utf8
default-character-set=utf8

[mysqlshow]
character-sets-dir=utf8
default-character-set=utf8

[myisamchk]
character-sets-dir=utf8

[myisampack]
character-sets-dir=utf8

# use [safe_mysqld] with mysql-3
[mysqld_safe]
err-log						= /var/log/mysql/mysql.err

# add a section [mysqld-4.1] or [mysqld-5.0] for specific configurations.
d23 40
a62 9
character-set-server		= utf8
default-character-set		= utf8
user 						= mysql
port 						= 3306
socket 						= /var/run/mysqld/mysqld.sock
pid-file 					= /var/run/mysqld/mysqld.pid
log-error 					= /var/log/mysql/mysqld.err
basedir 					= /usr
datadir 					= /var/lib/mysql
d64 7
a70 13
#skip-innodb
key_buffer 					= 16M
max_allowed_packet 			= 1M
table_cache 				= 64
sort_buffer_size 			= 512K
net_buffer_length 			= 8K
read_buffer_size 			= 256K
read_rnd_buffer_size 		= 512K
myisam_sort_buffer_size 	= 8M
language 					= /usr/share/mysql/english

#security:
#using "localhost" in connects use sockets by default
d72 1
a72 23
bind-address				= 127.0.0.1

log-bin
server-id 					= 1

# Point the following paths to different dedicated disks
tmpdir 						= /tmp/
#log-update 				= /path-to-dedicated-directory/hostname

# you need debug use flag enabled to use this ones.
# if needed uncomment them, start the server and issue 
# #tail -f /tmp/mysqld.sql /tmp/mysqld.trace
# this will show you *exactly* what's appening in your server ;)

#log						= /tmp/mysqld.sql
#gdb
#debug						= d:t:i:o,/tmp/mysqld.trace
#one-thread

# Uncomment the following if you are using BDB tables
#bdb_cache_size				= 4M
#bdb_max_lock				= 10000

d81 1
a81 1
innodb_buffer_pool_size		= 16M
d83 1
a83 1
innodb_additional_mem_pool_size	= 2M
d88 3
a90 3
#innodb_data_home_dir		= /var/lib/mysql/
#innodb_log_arch_dir		= /var/lib/mysql/
#innodb_log_group_home_dir	= /var/lib/mysql/
d93 1
a93 1
innodb_data_file_path		= ibdata1:10M:autoextend
d96 1
a96 1
innodb_log_file_size		= 5M
d98 1
a98 1
innodb_log_buffer_size		= 8M
d101 1
a101 1
set-variable				= innodb_log_files_in_group=2
d103 1
a103 2
innodb_flush_log_at_trx_commit	= 1
innodb_lock_wait_timeout	= 50
d108 1
a108 1
max_allowed_packet 			= 16M
d111 1
a111 2
# Remove the next comment character if you are not familiar with SQL
#safe-updates
d114 1
a114 17
key_buffer 					= 20M
sort_buffer_size 			= 20M
read_buffer 				= 2M
write_buffer 				= 2M

[myisamchk]
key_buffer 					= 20M
sort_buffer_size 			= 20M
read_buffer 				= 2M
write_buffer 				= 2M

[mysqlhotcopy]
interactive-timeout

#vim: set tabstop=4 :
#vim: set shiftwidth=4 :

@
