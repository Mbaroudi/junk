head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2006.03.09.10.34.31;	author zoldatoff;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.03.09.10.34.44;	author zoldatoff;	state Exp;
branches;
next	;


desc
@Archived config file.
@


1.1
log
@dispatch-conf update.
@
text
@#!/sbin/runscript
# Copyright 1999-2004 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: /var/cvsroot/gentoo-x86/net-proxy/squid/files/squid.initd-logrotate,v 1.1 2006/01/09 11:51:47 mrness Exp $

opts="${opts} reload"

depend() {
        need net
}

# Try to increase the # of filedescriptors we can open.
maxfds() {
        [ -n "$SQUID_MAXFD" ] || return
        [ -f /proc/sys/fs/file-max ] || return 0
        [ $SQUID_MAXFD -le 8192 ] || SQUID_MAXFD=8192
        global_file_max=`cat /proc/sys/fs/file-max`
        minimal_file_max=$(($SQUID_MAXFD + 4096))
        if [ "$global_file_max" -lt $minimal_file_max ]
        then
                echo $minimal_file_max > /proc/sys/fs/file-max
        fi
        ulimit -n $SQUID_MAXFD
}

checkconfig() {
        maxfds
        CACHE_SWAP=`sed -e 's/#.*//g' /etc/squid/squid.conf | \
                grep cache_dir | awk '{ print $3 }'`
        [ -z "$CACHE_SWAP" ] && CACHE_SWAP=/var/cache/squid
        umask 027
        for x in $CACHE_SWAP ; do
                if [ ! -d $x/00 ] ; then
                        einfo "Initializing cache directory: $x"
                        cd $x
                        /usr/sbin/squid -z -F 2>/dev/null
                        if [ $? -ne 0 ] ; then
                                eerror "Error initializing: $x"
                                return 1
                        fi
                fi
        done
}

start() {
        checkconfig || return 1
        ebegin "Starting squid"
        /usr/sbin/squid  ${SQUID_OPTS}
        eend $? && sleep 1
}

stop() {
        ebegin "Stopping squid"
        /usr/sbin/squid -k shutdown
        # Now we have to wait until squid has _really_ stopped.
        sleep 1
        if [ -f /var/run/squid.pid ] ; then
                einfon "Waiting ."
                cnt=0
                while [ -f /var/run/squid.pid ] ; do
                        cnt=`expr $cnt + 1`
                        if [ $cnt -gt 60 ] ; then
                                # Waited 120 seconds now. Fail.
                                eend 1 "Failed."
                                break
                        fi
                        sleep 2
                        echo -n "."
                done
                echo -n "done."
                eend 0
        else
                eend 0
        fi
}

reload() {
        checkconfig || return 1
        ebegin "Reloading squid"
        /usr/sbin/squid -k reconfigure
        eend $?
}
@


1.1.1.1
log
@dispatch-conf update.
@
text
@d2 1
a2 1
# Copyright 1999-2006 Gentoo Foundation
d4 1
a4 1
# $Header: /var/cvsroot/gentoo-x86/net-proxy/squid/files/squid.initd-logrotate,v 1.3 2006/01/18 21:46:22 mrness Exp $
d9 1
a9 1
	need net
d14 10
a23 9
	[ -n "$SQUID_MAXFD" ] || return
	[ -f /proc/sys/fs/file-max ] || return 0
	[ $SQUID_MAXFD -le 8192 ] || SQUID_MAXFD=8192
	local global_file_max=`cat /proc/sys/fs/file-max`
	local minimal_file_max=$(($SQUID_MAXFD + 4096))
	if [ "$global_file_max" -lt $minimal_file_max ]; then
		echo $minimal_file_max > /proc/sys/fs/file-max
	fi
	ulimit -n $SQUID_MAXFD
d27 16
a42 18
	maxfds
	local CACHE_SWAP=`awk '/^[ \t]*cache_dir[ \t]+/ { printf "%s ", $3 ; }' < /etc/squid/squid.conf`
	[ -z "$CACHE_SWAP" ] && CACHE_SWAP=/var/cache/squid
	umask 027
	for x in $CACHE_SWAP ; do
		if [ ! -d $x/00 ] ; then
			ebegin "Initializing cache directories"
			local INIT_CACHE_RESPONSE=`/usr/sbin/squid -z -N -D 2>&1`
			if [ $? != 0 ] || [ "$INIT_CACHE_RESPONSE" != "${INIT_CACHE_RESPONSE/erminated abnormally}" ]; then
				eend 1
				echo "$INIT_CACHE_RESPONSE"
				return 1
			fi
			eend 0
			break
		fi
	done
	return 0
d46 4
a49 4
	checkconfig || return 1
	ebegin "Starting squid"
	/usr/sbin/squid ${SQUID_OPTS}
	eend $? && sleep 1
d53 22
a74 21
	ebegin "Stopping squid"
	/usr/sbin/squid -k shutdown
	# Now we have to wait until squid has _really_ stopped.
	sleep 1
	if [ -f /var/run/squid.pid ] ; then
		einfon "Waiting ."
		cnt=0
		while [ -f /var/run/squid.pid ] ; do
			cnt=`expr $cnt + 1`
			if [ $cnt -gt 60 ] ; then
				# Waited 120 seconds now. Fail.
				eend 1 "Failed."
				break
			fi
			sleep 2
			echo -n "."
		done
		eend 0
	else
		eend 0
	fi
d78 4
a81 4
	checkconfig || return 1
	ebegin "Reloading squid"
	/usr/sbin/squid -k reconfigure
	eend $?
@
